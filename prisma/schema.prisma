generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model comments {
  commentid      String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  postid         String?    @db.Uuid
  userid         String?    @db.Uuid
  parent_comment String?    @db.Uuid
  body           String     @db.VarChar
  date           DateTime   @default(now()) @db.Timestamp(6)
  comments       comments?  @relation("commentsTocomments", fields: [parent_comment], references: [commentid], onDelete: NoAction, onUpdate: NoAction)
  other_comments comments[] @relation("commentsTocomments")
  posts          posts?     @relation(fields: [postid], references: [postid], onDelete: NoAction, onUpdate: NoAction)
  users          users?     @relation(fields: [userid], references: [userid], onDelete: NoAction, onUpdate: NoAction)
}

model posts {
  postid      String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userid      String?     @db.Uuid
  subredditid String?     @db.Uuid
  title       String      @db.VarChar
  body        String?     @db.VarChar
  img         String?     @db.VarChar
  date        BigInt
  comments    comments[]
  subreddits  subreddits? @relation(fields: [subredditid], references: [subredditid], onDelete: NoAction, onUpdate: NoAction)
  users       users?      @relation(fields: [userid], references: [userid], onDelete: NoAction, onUpdate: NoAction)
  votes       votes[]
}

model subreddits {
  subredditid String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title       String   @unique @db.VarChar
  admin       String?  @db.Uuid
  userids     String[] @db.Uuid
  description String   @db.VarChar
  posts       posts[]
  users       users?   @relation(fields: [admin], references: [userid], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  userid     String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  username   String       @unique @db.VarChar
  email      String       @unique @db.VarChar
  comments   comments[]
  posts      posts[]
  subreddits subreddits[]
  votes      votes[]
}

model votes {
  voteid String  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userid String? @db.Uuid
  postid String? @db.Uuid
  value  Int
  posts  posts?  @relation(fields: [postid], references: [postid], onDelete: NoAction, onUpdate: NoAction)
  users  users?  @relation(fields: [userid], references: [userid], onDelete: NoAction, onUpdate: NoAction)
}

